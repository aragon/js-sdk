name: Javascript Release
on:
  pull_request:
    types:
      - closed

jobs:
  test:
    uses: ./.github/workflows/javascript_test.yml
    secrets:
      IPFS_API_KEY: ${{ secrets.IPFS_API_KEY }}
  prepare:
    needs: ['test']
    name: Prepare release generation
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      hasLabels: ${{ steps.matrix.outputs.hasLabels }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'develop'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Generate release Matrix
        id: matrix
        env:
          PULL_LABELS: ${{ toJson(github.event.pull_request.labels) }}
        run: python ./.github/scripts/generate_release_matrix.py
  release:
    name: Generates Github Releases
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ needs.prepare.outputs.hasLabels == 'True' }}
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'develop'
          token: ${{ secrets.ARABOT_PAT }}
      - name: get version
        id: version
        run: | 
          VERSION=$(cat package.json | jq -r .version)
          echo "::set-output name=version::$VERSION"
        working-directory: './modules/${{ matrix.package }}'
      - name: create tag
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.ARABOT_PAT }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ steps.version.outputs.version }}-javascript-${{ matrix.package }}`,
              sha: "${{ github.sha }}"
            })