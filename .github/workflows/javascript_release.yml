name: Javascript Release

on:
  workflow_call:
    inputs:
      run:
        description: "Forces a run if true"
        required: false
        type: boolean
  pull_request:
    types:
      - closed

jobs:

  test:
    uses: ./.github/workflows/javascript_test.yml
    secrets:
      IPFS_API_KEY: ${{ secrets.IPFS_API_KEY }}

  prepare:
    name: Prepare release generation
    needs: ['test']
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      hasLabels: ${{ steps.matrix.outputs.hasLabels }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'develop'
      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Generate release-matrix based on current Github Labels
        id: matrix
        run: |
          echo "Current Labels list (only names): ${{ toJson(github.event.pull_request.labels.*.name) }}"
          python ./.github/scripts/generate_release_matrix.py
        env:
          PULL_LABELS: ${{ toJson(github.event.pull_request.labels) }}
      - name: Check vars
        run: |
          echo "value of hasLabels: ${{ steps.matrix.outputs.hasLabels }}"
          echo "value of matrix: ${{ steps.matrix.outputs.matrix }}"

  release:
    name: Set Github Tag after PR
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ needs.prepare.outputs.hasLabels == 'True' }}
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'develop'
      - name: Get version from '${{ matrix.package }}' package.json
        id: version
        working-directory: './modules/${{ matrix.package }}'
        run: | 
          VERSION=$(cat package.json | jq -r .version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Set Github Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ steps.version.outputs.version }}-javascript-${{ matrix.package }}`,
              sha: "${{ github.sha }}"
            })