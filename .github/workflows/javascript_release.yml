name: Javascript Release

on:
  pull_request:
    types:
      - closed

jobs:

  test:
    uses: ./.github/workflows/javascript_test.yml
    secrets:
      IPFS_API_KEY: ${{ secrets.IPFS_API_KEY }}

  prepare:
    name: Prepare release generation
    needs: ['test']
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    outputs:
      PACKAGE_LIST: ${{ steps.matrix.outputs.pkg_list }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'develop'
      - name: Get package-list from label-list
        id: matrix
        run: |
          ## [ aaa-123, bbb-ccc-release, ddd-release ]
          LABEL_LIST="${{ toJson(github.event.pull_request.labels.*.name) }}"
          ## [aaa-123,bbb-ccc,ddd]
          PKG_LIST="echo $LABEL_LIST | sed 's/\(\s\|-release\)//g'"
          echo "pkg_list=$PKG_LIST"  >> $GITHUB_OUTPUT

  release:
    name: Set Github Tag after PR
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      fail-fast: true
      matrix:
        # example: [client, common, client-common]
        package: ${{ needs.prepare.outputs.PACKAGE_LIST }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'develop'
      - name: Get version from '${{ matrix.package }}' package.json
        id: version
        working-directory: './modules/${{ matrix.package }}'
        run: | 
          VERSION=$(cat package.json | jq -r .version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Set Github Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ steps.version.outputs.version }}-javascript-${{ matrix.package }}`,
              sha: "${{ github.sha }}"
            })