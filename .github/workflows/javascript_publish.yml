name: Javascript Publish

on:
  push:
    tags:
      - '*'

jobs:
  checkTag:
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.tagInfo.outputs.package }}
      version: ${{ steps.tagInfo.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: get info from tag
        id: tagInfo
        run: |
          GITHUB_REF="${{ github.ref }}"
          TAG=${GITHUB_REF##*/}
          VERSION=$(echo "$TAG" | grep -woP "([0-9]+\.[0-9]+\.[0-9]+)")
          PACKAGE=$(echo "$TAG" | grep -oP "javascript-(.+)" | sed 's/javascript-//')
          if [ -d "javascript/modules/$PACKAGE" ]; then
            echo "::set-output name=package::$PACKAGE"
            echo "::set-output name=version::$VERSION"
          fi
  test:
    uses: ./.github/workflows/javascript_test.yml
  publish:
    runs-on: ubuntu-latest
    needs: [checkTag, test]
    if: ${{ needs.checkTag.outputs.package }}
    steps:
      - name: Validate outputs
        run: |
          if [ -z "${{ needs.checkTag.outputs.package }}" ]; then
            echo "::error ::No package found in tag"
            exit 1
          fi
          if [ -z "${{ needs.checkTag.outputs.version }}" ]; then
            echo "::error ::No version found in tag"
            exit 1
          fi
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ARABOT_PAT }}
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'

      - name: install deps
        working-directory: javascript/
        run: yarn install --frozen-lockfile

      - name: Build subpackages
        working-directory: javascript/
        run: yarn run build

      - name: Publish
        run: yarn publish --no-git-tag-version --new-version ${{ needs.checkTag.outputs.version }}
        working-directory: javascript/modules/${{ needs.checkTag.outputs.package }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Get Release Notes
        id: notes
        run: python ./.github/scripts/generate_release_notes.py "javascript/modules/${{ needs.checkTag.outputs.package }}/CHANGELOG.md"
      - uses: "softprops/action-gh-release@v1"
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false
          body_path: ${{ steps.notes.outputs.notes }}
      - name: Update Changelog
        run: |
          git checkout develop
          git fetch
          git pull
          git config --global user.name "Arabot-1"
          git config --global user.email "arabot-1@users.noreply.github.com"
          sed -i "s/\[TBD\]/[TBD]  \n  \n\## [${{ needs.checkTag.outputs.version }}\] - $(date)/" "javascript/modules/${{ needs.checkTag.outputs.package }}/CHANGELOG.md"
          git add "javascript/modules/${{ needs.checkTag.outputs.package }}/CHANGELOG.md"
          git commit -am "Update Changelog for ${{ needs.checkTag.outputs.package }}"
          git push
